<div class="intro">
    <p>
    A plugin for Y.Node that converts regular buttons marked with a given className into toggle buttons.
It will also make groups of toggle buttons within a container mutually exclusive of one another.
    </p>
</div>

<h2>Description</h2>

<p>This static class has a single public method addToggles, which will search within the given container (or the document body if none given) for buttons marked with the yui3-button-toggle className and make them behave as toggle buttons.  It will add a selected attribute which will return the pressed state of the button.<br>
<br>
The addToggles method will also search for any container marked with the yui3-button-group-exclusive className and make sure that only one toggle button within it is pressed at any time.   It also adds a selected attribute to such container which points to the selected button.<br>
<br>
Toggle buttons marked with the yui3-button-selected className will be shown depressed.<br>
<br>
The plugin adds the aria-pressed attribute to active toggle buttons.<br>
<br>
The plugin relies on the CSS Button module for styling.  Thus, buttons also have to be marked with the yui3-button className to have the proper styling.<br>
<br>
Regular buttons or groups of otherwise unrelated buttons, be them toggles or not, need no special handling so this plugin ignores them. The plugin doesn't interfere with other elements that do have a selected attribute, nor does it add such attribute to any other element but those explicitly marked via the classNames.<br>
<br>
The plugin fits well with any template engine as such engine would be used initially to create the markup, either in the client or the server, and then the plugin would run and activate the toggling on the marked elements.<br>
</p>

```
/* 
Single toggle button:
<button id="toggle0" class="yui3-button yui3-button-toggle">toggle</button>

Set of mutually exclusive toggle buttons, the third is pre-selected:
<span id="group" class="yui3-button-group-exclusive">
       <button id="toggle11" class="yui3-button yui3-button-toggle">A</button>
       <button id="toggle12" class="yui3-button yui3-button-toggle">B</button>
       <button id="toggle13" class="yui3-button yui3-button-toggle yui3-button-selected">C</button>
</span>
*/
YUI().use('gallery-button-plugin', function(Y) {

    // Reports the pressed state of the toggle whenever it is clicked
     Y.one('#toggle0').on('click', function (){
         Y.log('click on toggle, selected: '  + this.get('selected'));
     });

    // Makes sure it starts unselected
    Y.one('#toggle0').set('selected', false);

    // selects the B button, overriding the one pre-selected in the markup
    Y.one('#group').set('selected','#toggle12');

    // Uses event delegation to detect the toggling of the buttons in the group
    Y.delegate('click', function(ev) {
          // The selected attribute of the container points to the toggle button currently selected
          // it may return null if no button is pressed.
          var selected = ev.container.get('selected');

          // Shows the label of the button selected or none
          Y.log('group click, selected: ' + (selected?selected.getContent():'none'));
     },'#group', 'button');

});
```

